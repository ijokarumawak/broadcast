upstream es {
  server        elk.cloudnativedays.jp:9200;
}

upstream kibana {
  server        kibana:5601;
}

server {
  listen        80;
  server_name   _;
  return 301 https://$host$request_uri;
}

server {
  listen        443 ssl;
  server_name   elk.cloudnativedays.jp;

  # Increase buffer size to avoid 'upstream sent too big header' 502 error
  # https://www.cyberciti.biz/faq/nginx-upstream-sent-too-big-header-while-reading-response-header-from-upstream/
  proxy_busy_buffers_size   512k;
  proxy_buffers   4 512k;
  proxy_buffer_size   256k;

  include       /etc/nginx/common.conf;
  include       /etc/nginx/ssl.conf;

  location / {
    include /etc/nginx/common_location.conf;
    root   /usr/share/nginx/html;
    index  index.html;
  }

  location = /logout {
    include /etc/nginx/vouch.conf;
    proxy_pass http://vouch:9090/logout?url=https://${AUTH0_DOMAIN}/v2/logout?client_id=${AUTH0_CLIENT_ID}%26returnTo=https://elk.cloudnativedays.jp/;
  }

  location ~ ^\/(auth|login|validate) {
    include /etc/nginx/vouch.conf;
    proxy_pass http://vouch:9090;
  }

  location @prompt_login {
     include /etc/nginx/vouch.conf;
     # redirect to Vouch Proxy for login
      return 302 https://elk.cloudnativedays.jp/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
  }

  # uncomment this to forward static content of vouch-proxy
  # used when running vouch-proxy with `testing: true`
  location /static/ {
    proxy_set_header Host $http_host;
    proxy_pass http://vouch:9090/static/;
  }

  # To access Elasticsearch API, use Elasticsearch authentication directly, such as ApiKey.
  location /es/ {
    proxy_pass  https://es/;
    include /etc/nginx/common_location.conf;
  }
  location /es {
    proxy_pass  https://es/;
    include /etc/nginx/common_location.conf;
  }

  # Capture logout call when the user clicks Kibana logout button, then logout from Vouch.
  location = /kibana/api/security/logout {
    include /etc/nginx/vouch.conf;
    proxy_pass http://vouch:9090/logout?url=https://${AUTH0_DOMAIN}/v2/logout?client_id=${AUTH0_CLIENT_ID}%26returnTo=https://elk.cloudnativedays.jp/;
  }

  # Other Kibana URL will be passed to Kibana if the user has logged in to Vouch.
  location ~ ^\/kibana\/?(.*)$ {

    auth_request /validate;
    auth_request_set $auth_user $upstream_http_x_vouch_user;

    expires 0;
    add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    add_header Pragma "no-cache";

    # if /validate returns `401 not authorized` then forward the request to the login page
    error_page 401 = @prompt_login;

    auth_request_set $user $upstream_http_x_vouch_user;
    auth_request_set $roles $upstream_http_x_vouch_idp_claims_cloudnativedays_jp_roles;

    # guest by default
    set $basic_auth "Basic ${KIBANA_BASIC_GUEST}";

    access_by_lua '
      if ngx.var.roles and string.find(ngx.var.roles, "\\"CNDT2022%-Admin\\"") then
        -- admin
        ngx.var.basic_auth = "Basic ${KIBANA_BASIC_ADMIN}"
      end
    ';

    proxy_set_header Authorization $basic_auth;
    proxy_pass  https://kibana;
    include /etc/nginx/common_location.conf;
  }

}
